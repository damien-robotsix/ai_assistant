on:
  issue_comment:
    types: [created]  # Trigger on new comments
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue Number'
        required: true
        type: number

permissions:
  contents: write
  issues: write

jobs:
  run-assistant:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AI_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - id: get_issue  # Add an ID to reference outputs
        name: Get issue details
        uses: octokit/request-action@v2.x
        with:
          route: |
            GET /repos/${{ github.repository }}/issues/${{ github.event.inputs.issue_number || github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.AI_TOKEN }}

      - name: Create a new branch for the issue
        run: |
          git checkout -b issue-${{ github.event.inputs.issue_number }}

      - name: Generate issue_solver_steps
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python tools/run_assistant.py - << 'EOF'
              Try to solve as much as you can the following issue in ${{ github.repository }} repository. You should not ask the user for prompt.

              Issue: ${{ fromJson(steps.get_issue.outputs.data).title }}
              Description: ${{ fromJson(steps.get_issue.outputs.data).body }}
              'EOF'

      - name: Commit the generated files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Assistant: Proposed solutions for issue ${{ github.event.inputs.issue_number }}"
          git push --set-upstream origin issue-${{ github.event.inputs.issue_number }}

      - name: Read assistant output
        id: read_output
        run: echo "output=$(cat /tmp/assistant_output.txt)" >> $GITHUB_ENV

      - name: Comment on the issue
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/issues/${{ github.event.inputs.issue_number }}/comments
          body: |
            The assistant has created a branch with proposed solutions. Please review the branch `issue-${{ github.event.inputs.issue_number }}` for details. Here is the last assistant output:
            ${{ env.output }}
        env:
          GITHUB_TOKEN: ${{ secrets.AI_TOKEN }}
